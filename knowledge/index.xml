<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Knowledges on Adrián Abreu</title><link>https://adrianabreu.com/knowledge/</link><description>Recent content in Knowledges on Adrián Abreu</description><generator>Hugo</generator><language>es-ES</language><copyright>2017-2024 Adrián Abreu powered by Hugo and Kiss Theme</copyright><lastBuildDate>Sun, 08 Oct 2017 18:04:42 +0000</lastBuildDate><atom:link href="https://adrianabreu.com/knowledge/index.xml" rel="self" type="application/rss+xml"/><item><title>SOLID Principles</title><link>https://adrianabreu.com/knowledge/solidprinciples/</link><pubDate>Sun, 08 Oct 2017 18:04:42 +0000</pubDate><guid>https://adrianabreu.com/knowledge/solidprinciples/</guid><description>&lt;h2 id="srp-single-responsability-principle">SRP: Single Responsability Principle&lt;/h2>
&lt;p>&lt;strong>Una pieza de software debería tener una única razón para cambiar.&lt;/strong>&lt;/p>
&lt;p>Si una clase tiene más de una &amp;ldquo;responsabilidad&amp;rdquo; (razón de cambio), un cambio en algún requisito podría ser muy difícil de modelar. Ya que al cumplir con esta responsabilidad podríamos estar incumpliendo otras.&lt;/p>
&lt;p>Esto hace que el diseño sea realmente frágil y esté acoplado: es decir, se va a romper de formas inesperadas.&lt;/p></description></item></channel></rss>